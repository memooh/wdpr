// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace wdpr.Migrations
{
    [DbContext(typeof(KliniekContext))]
    [Migration("20220116135514_zelfhulpgroep")]
    partial class zelfhulpgroep
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Aanmelding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Achternaam")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BehandelaarId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gebruikersnaam")
                        .HasColumnType("TEXT");

                    b.Property<string>("Voornaam")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BehandelaarId");

                    b.ToTable("Aanmeldingen");
                });

            modelBuilder.Entity("Models.Afspraak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BehandelaarId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<int?>("_BehandelingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BehandelaarId");

                    b.HasIndex("ClientId");

                    b.HasIndex("_BehandelingId");

                    b.ToTable("Afspraken");
                });

            modelBuilder.Entity("Models.Behandeling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Behandelingen");
                });

            modelBuilder.Entity("Models.Bericht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VerzenderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("VerzenderId");

                    b.ToTable("Berichten");
                });

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BehandelaarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BehandelaarId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Models.Deelname", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Toetredingsdatum")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("ClientId");

                    b.ToTable("Deelnames");
                });

            modelBuilder.Entity("Models.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gebruikersnaam")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VoogdId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Wachtwoord")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VoogdId");

                    b.ToTable("Gebruikers");
                });

            modelBuilder.Entity("Models.ZelfhulpDeelname", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Toetredingsdatum")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ZelfhulpgroepId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ZelfhulpgroepId");

                    b.ToTable("ZelfhulpDeelnames");
                });

            modelBuilder.Entity("Models.Zelfhulpgroep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Naam")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Zelfhulpgroepen");
                });

            modelBuilder.Entity("Models.Aanmelding", b =>
                {
                    b.HasOne("Models.Gebruiker", "Behandelaar")
                        .WithMany()
                        .HasForeignKey("BehandelaarId");

                    b.Navigation("Behandelaar");
                });

            modelBuilder.Entity("Models.Afspraak", b =>
                {
                    b.HasOne("Models.Gebruiker", "Behandelaar")
                        .WithMany()
                        .HasForeignKey("BehandelaarId");

                    b.HasOne("Models.Gebruiker", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Models.Behandeling", "_Behandeling")
                        .WithMany()
                        .HasForeignKey("_BehandelingId");

                    b.Navigation("_Behandeling");

                    b.Navigation("Behandelaar");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Models.Bericht", b =>
                {
                    b.HasOne("Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("Models.Gebruiker", "Verzender")
                        .WithMany()
                        .HasForeignKey("VerzenderId");

                    b.Navigation("Chat");

                    b.Navigation("Verzender");
                });

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.HasOne("Models.Gebruiker", "Behandelaar")
                        .WithMany()
                        .HasForeignKey("BehandelaarId");

                    b.Navigation("Behandelaar");
                });

            modelBuilder.Entity("Models.Deelname", b =>
                {
                    b.HasOne("Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("Models.Gebruiker", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Chat");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Models.Gebruiker", b =>
                {
                    b.HasOne("Models.Gebruiker", "Voogd")
                        .WithMany()
                        .HasForeignKey("VoogdId");

                    b.Navigation("Voogd");
                });

            modelBuilder.Entity("Models.ZelfhulpDeelname", b =>
                {
                    b.HasOne("Models.Gebruiker", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Models.Zelfhulpgroep", "Zelfhulpgroep")
                        .WithMany()
                        .HasForeignKey("ZelfhulpgroepId");

                    b.Navigation("Client");

                    b.Navigation("Zelfhulpgroep");
                });
#pragma warning restore 612, 618
        }
    }
}
